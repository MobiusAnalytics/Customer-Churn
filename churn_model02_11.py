# -*- coding: utf-8 -*-
"""Churn_Model02/11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oa6r3nPpJZMUYfVhPX7gW4EJVkAx5Fpq

# Importing libraries
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline
sns.set_style("darkgrid")

data = pd.read_excel('/content/Churn_analysis.xlsx')

data.head()

data.isnull().sum()

data.info()

data['account_segment'].value_counts()

data['account_segment'].replace({'Regular +':'Regular Plus','Super +':'Super Plus'},inplace=True)

data['account_segment'].value_counts()

data= data.replace("[@_!+#$%^&*()<>?/|}{~:]",'',regex=True)

plt.figure(figsize=(10,8))
sns.countplot(data=data,x="Churn")

"""#Pre-processing"""

df=data.copy()

df['account_segment'].replace({'Regular':1, 'Regular Plus':2,'Super':3,'Super Plus':4,'HNI':5},inplace=True)
df['Marital_Status'].replace({'Married':1, 'Single':2,'Divorced':3},inplace=True)

from sklearn.impute import KNNImputer
KNN_imputer = KNNImputer(n_neighbors=5)
df_imputed = pd.DataFrame(KNN_imputer.fit_transform(df),columns=df.columns)

df_imputed.isna().sum()

df_imputed['account_segment']=df_imputed['account_segment'].round()
df_imputed['Marital_Status']=df_imputed['Marital_Status'].round()

from sklearn.feature_selection import SelectKBest, chi2, f_regression
X_clf=df_imputed.iloc[:,1:7] 
y_clf=df_imputed.iloc[:,0]
bestfeatures = SelectKBest (chi2, k='all')
fit= bestfeatures.fit(X_clf,y_clf)
dfscores = pd.DataFrame(fit.scores_)
dfcolumns = pd.DataFrame(X_clf.columns)
featureScores = pd.concat([dfcolumns, dfscores], axis=1)
featureScores.columns = ['Features', 'Score']
print(featureScores.sort_values(by=['Score'],ascending=False))

df_imputed

"""## Model"""

#X= df_imputed.iloc[:, 1:7].values  
#y= df_imputed.iloc[:, 0].values

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(df_imputed.drop(['Churn'],axis=1),
                                                    df_imputed['Churn'], test_size=0.2, random_state=0)

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import confusion_matrix, accuracy_score
from sklearn.metrics import classification_report

rfc = RandomForestClassifier()
rfc.fit(X_train,y_train)

y_pred = rfc.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
print(cm)
print("Accuracy:",accuracy_score(y_test, y_pred))

"""Nomenclature

**column : account_segment**

Regular-1

Regular Plus-2

Super-3

Super Plus-4

HNI-5

**column : Marital_Status**

Married-1

Single-2

Divorced-3
"""

import pickle
with open("RF_churn_model.sav", "wb") as f:
    pickle.dump(rfc, f)
with open("RF_churn_model.sav", "rb") as f:
    print(pickle.load(f))